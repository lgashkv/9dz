#Напишите функцию, которая принимает на вход строку и проверяет является ли она валидным транспортным номером (1 буква, 3 цифры, 2 буквы, 2-3 цифры). Обратите внимание, что не все буквы кириллического алфавита используются в транспортных номерах.

Если номер валиден, то функция должна возвращать отдельно номер и регион.

Примеры работы программы:

import re
vvod = input('Введите госномер:')
nomer = r'([АВЕКМНОРСТУХ]{2})(\d{2,3})(\w{1})(\d{2})|([АВЕКМНОРСТУХ]{1})(\d{3})(\w{1})(\d{2})'
vvod_1 = re.search(nomer, vvod)
if vvod_1 != None:
    if vvod in vvod_1.group(0):
        n1 = r'(^\w*)(\d{2}$)'
        n_2 = re.search(n1, vvod)
        print('Результат: Номер',n_2.group(1), 'валиден. Регион:',n_2.group(2))
else:
    print('Результат: Номер не валиден')



#some_string = 'Напишите функцию функцию, которая будет будет будет будет удалять все все все все последовательные повторы слов из из из из заданной строки строки при помощи регулярных выражений'
#Вариант работает, но не в одну строку
import re
list_01 = re.findall(r'\w+|,',some_string)
list_02 = []

for unic in list_01:
    if unic not in list_02:
        list_02.append(unic)
list_03 = (str)
list_03 = ' '.join(list_02)
list_04 = re.sub(r'\s\,',r',', list_03)
print(list_04)

#Вымученный вариант
some_string = 'Напишите функцию функцию, которая будет будет будет будет удалять все все все все последовательные повторы слов из из из из заданной строки строки при помощи регулярных выражений'
import re
re.sub(r'(\w+\s|\,)(\w+\1|\w+\1\w+\,)',r'\1',re.sub(r'(\w+\s|\w+\,)(\w+\1|(\w+).+(?=\s\w+\,))',r'\1',some_string))


#Напишите функцию, которая будет возвращать акроним по переданной в нее строке со словами.
import re
some_words = 'Информационные технологии'
re.sub(str(re.findall(r'[a-z,а-я]',some_words)),'', some_words.title())


#Напишите функцию, которая будет принимать на вход список email-адресов и выводить их распределение по доменным зонам.

Пример работы программы:

emails = [‘test@gmail.com, xyz@test.in, test@ya.ru, xyz@mail.ru, xyz@ya.ru’, xyz@gmail.com]

Результат:

gmail.com: 2
test.in: 1
ya.ru: 2
mail.ru: 1

emails = 'test@gmail.com, xyz@test.in, test@ya.ru, xyz@mail.ru, xyz@ya.ru, xyz@gmail.com'
list_1 = re.findall(r'\w+\.\w+', emails)
list_1
rez ={}
for kol in list_1:
    if kol not in rez:
        rez[kol] = 1
    else:
        rez[kol] += 1
print('Результат:')
print(rez)

#Напишите функцию, которая будет подсчитывать сколько слов начинается на гласные, а сколько на согласные буквы в тексте (текст может быть написан как с использованием букв кириллицы, так и латиницы).
some_text = 'Эталонной реализацией Python является интерпретатор CPython, поддерживающий большинство активно используемых платформ. Он распространяется под свободной лицензией Python Software Foundation License, позволяющей использовать его без ограничений в любых приложениях, включая проприетарные.'
st = re.split(r'\s+',some_text)
soglasnie = re.sub(r'[AEOUYАЕИОУЭЮЯ]\w+','',some_text.title())
general = len(some_text.split()) - len(soglasnie.split())
print('Слов на согласные буквы:', len(soglasnie.split()))
print('Слов на гласные буквы:', general)




